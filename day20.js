/*
--- Day 20: Jurassic Jigsaw ---

The high-speed train leaves the forest and quickly carries you south. You can even see a desert in the distance! Since you have some spare time, you might as well see if there was anything interesting in the image the Mythical Information Bureau satellite captured.

After decoding the satellite messages, you discover that the data actually contains many small images created by the satellite's camera array. The camera array consists of many cameras; rather than produce a single square image, they produce many smaller square image tiles that need to be reassembled back into a single image.

Each camera in the camera array returns a single monochrome image tile with a random unique ID number. The tiles (your puzzle input) arrived in a random order.

Worse yet, the camera array appears to be malfunctioning: each image tile has been rotated and flipped to a random orientation. Your first task is to reassemble the original image by orienting the tiles so they fit together.

To show how the tiles should be reassembled, each tile's image data includes a border that should line up exactly with its adjacent tiles. All tiles have this border, and the border lines up exactly when the tiles are both oriented correctly. Tiles at the edge of the image also have this border, but the outermost edges won't line up with any other tiles.

For example, suppose you have the following nine tiles:

Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...

By rotating, flipping, and rearranging them, you can find a square arrangement that causes all adjacent borders to line up:

#...##.#.. ..###..### #.#.#####.
..#.#..#.# ###...#.#. .#..######
.###....#. ..#....#.. ..#.......
###.##.##. .#.#.#..## ######....
.###.##### ##...#.### ####.#..#.
.##.#....# ##.##.###. .#...#.##.
#...###### ####.#...# #.#####.##
.....#..## #...##..#. ..#.###...
#.####...# ##..#..... ..#.......
#.##...##. ..##.#..#. ..#.###...

#.##...##. ..##.#..#. ..#.###...
##..#.##.. ..#..###.# ##.##....#
##.####... .#.####.#. ..#.###..#
####.#.#.. ...#.##### ###.#..###
.#.####... ...##..##. .######.##
.##..##.#. ....#...## #.#.#.#...
....#..#.# #.#.#.##.# #.###.###.
..#.#..... .#.##.#..# #.###.##..
####.#.... .#..#.##.. .######...
...#.#.#.# ###.##.#.. .##...####

...#.#.#.# ###.##.#.. .##...####
..#.#.###. ..##.##.## #..#.##..#
..####.### ##.#...##. .#.#..#.##
#..#.#..#. ...#.#.#.. .####.###.
.#..####.# #..#.#.#.# ####.###..
.#####..## #####...#. .##....##.
##.##..#.. ..#...#... .####...#.
#.#.###... .##..##... .####.##.#
#...###... ..##...#.. ...#..####
..#.#....# ##.#.#.... ...##.....

For reference, the IDs of the above tiles are:

1951    2311    3079
2729    1427    2473
2971    1489    1171

To check that you've assembled the image correctly, multiply the IDs of the four corner tiles together. If you do this with the assembled tiles from the example above, you get 1951 * 3079 * 2971 * 1171 = 20899048083289.

Assemble the tiles into an image. What do you get if you multiply together the IDs of the four corner tiles?

Your puzzle answer was 21599955909991.
--- Part Two ---

Now, you're ready to check the image for sea monsters.

The borders of each tile are not part of the actual image; start by removing them.

In the example above, the tiles become:

.#.#..#. ##...#.# #..#####
###....# .#....#. .#......
##.##.## #.#.#..# #####...
###.#### #...#.## ###.#..#
##.#.... #.##.### #...#.##
...##### ###.#... .#####.#
....#..# ...##..# .#.###..
.####... #..#.... .#......

#..#.##. .#..###. #.##....
#.####.. #.####.# .#.###..
###.#.#. ..#.#### ##.#..##
#.####.. ..##..## ######.#
##..##.# ...#...# .#.#.#..
...#..#. .#.#.##. .###.###
.#.#.... #.##.#.. .###.##.
###.#... #..#.##. ######..

.#.#.### .##.##.# ..#.##..
.####.## #.#...## #.#..#.#
..#.#..# ..#.#.#. ####.###
#..####. ..#.#.#. ###.###.
#####..# ####...# ##....##
#.##..#. .#...#.. ####...#
.#.###.. ##..##.. ####.##.
...###.. .##...#. ..#..###

Remove the gaps to form the actual image:

.#.#..#.##...#.##..#####
###....#.#....#..#......
##.##.###.#.#..######...
###.#####...#.#####.#..#
##.#....#.##.####...#.##
...########.#....#####.#
....#..#...##..#.#.###..
.####...#..#.....#......
#..#.##..#..###.#.##....
#.####..#.####.#.#.###..
###.#.#...#.######.#..##
#.####....##..########.#
##..##.#...#...#.#.#.#..
...#..#..#.#.##..###.###
.#.#....#.##.#...###.##.
###.#...#..#.##.######..
.#.#.###.##.##.#..#.##..
.####.###.#...###.#..#.#
..#.#..#..#.#.#.####.###
#..####...#.#.#.###.###.
#####..#####...###....##
#.##..#..#...#..####...#
.#.###..##..##..####.##.
...###...##...#...#..###

Now, you're ready to search for sea monsters! Because your image is monochrome, a sea monster will look like this:

                  # 
#    ##    ##    ###
 #  #  #  #  #  #   

When looking for this pattern in the image, the spaces can be anything; only the # need to match. Also, you might need to rotate or flip your image before it's oriented correctly to find sea monsters. In the above image, after flipping and rotating it to the appropriate orientation, there are two sea monsters (marked with O):

.####...#####..#...###..
#####..#..#.#.####..#.#.
.#.#...#.###...#.##.O#..
#.O.##.OO#.#.OO.##.OOO##
..#O.#O#.O##O..O.#O##.##
...#.#..##.##...#..#..##
#.##.#..#.#..#..##.#.#..
.###.##.....#...###.#...
#.####.#.#....##.#..#.#.
##...#..#....#..#...####
..#.##...###..#.#####..#
....#.##.#.#####....#...
..##.##.###.....#.##..#.
#...#...###..####....##.
.#.##...#.##.#.#.###...#
#.###.#..####...##..#...
#.###...#.##...#.##O###.
.O##.#OO.###OO##..OOO##.
..O#.O..O..O.#O##O##.###
#.#..##.########..#..##.
#.#####..#.#...##..#....
#....##..#.#########..##
#...#.....#..##...###.##
#..###....##.#...##.##.#

Determine how rough the waters are in the sea monsters' habitat by counting the number of # that are not part of a sea monster. In the above example, the habitat's water roughness is 273.

How many # are not part of a sea monster?

Your puzzle answer was 2495.

Both parts of this puzzle are complete! They provide two gold stars: **
*/

let input = `Tile 2953:
.###.###..
.#....#..#
#.#......#
.###.#..##
#..##..#..
....#....#
.##.#..#.#
#......#..
#.........
..##..#.#.

Tile 2053:
##.##...#.
......#.#.
..###.#...
..#..#.###
##.......#
###...#.##
.#.##.##..
##...#...#
##.##..###
.#...####.

Tile 1213:
.......#..
#...##...#
....#..#..
..#..###..
#..##..#..
#.#.#.....
...#.#..##
#.#.#.#...
....#.....
..##....##

Tile 2801:
.#.##.#...
#.#....###
.....##..#
.....#....
#....##...
#.#...#..#
..#..#..##
#........#
#..#...#..
..###.....

Tile 1109:
#######...
..........
##..#....#
#........#
.#.#...#..
####.....#
...#.##...
.##....#.#
#..##...#.
#.#..##...

Tile 2833:
#.#.#.#..#
#.#...#..#
.....#.#.#
#.##....##
#.##..##.#
#.#..##.#.
..#......#
#....#....
..#.#.#...
#..##..##.

Tile 2099:
##.#..#..#
.....#..#.
.........#
.....###..
#.........
####.#..#.
######...#
##.##.#...
.....###..
.....##..#

Tile 1867:
#..####.#.
#....#..##
#..##.#..#
..#..#...#
#...#....#
...##.....
..........
....##.###
##..#.#.##
##..#.####

Tile 2551:
#.#.#...#.
#....#...#
.#.#.....#
#.#.#...#.
#.#...#.##
...#.##..#
...#.....#
#.........
#..#.#....
##..#.##.#

Tile 2239:
#.#...###.
#.#.....##
##....#...
##.......#
.#.#..#..#
###......#
#.........
...#....##
#..#.##..#
...###....

Tile 3049:
..##....#.
...##...##
....###..#
.#.##.....
.##...#.#.
..#...#..#
#......#..
.####...##
#..##.....
.##.##.###

Tile 1913:
###....#..
.....##...
#.#.....#.
....#....#
#...#...#.
.......###
..#....#..
##........
..#...#..#
##....#.#.

Tile 3469:
.##.##...#
#...####..
.###.##...
##.#...#..
#...#...##
#.##.#..##
##......##
..........
#.....#..#
#.##..##..

Tile 2467:
##.#.###..
..#####..#
#....##...
#.....#.##
#.#...#...
.....##.#.
#..#..#..#
#....##..#
#..###.#..
.##.......

Tile 3467:
##..##....
##......#.
##....#...
.#...##...
#.#....#..
##....#.##
#..#..#.#.
#.....####
#.#..####.
.#.#.#..#.

Tile 2683:
#..##...#.
.####....#
#.......##
#.....#.##
...##.#..#
##.#......
##....#...
.##.....#.
..#......#
##.....##.

Tile 2927:
.#..#.####
#..##....#
..##.###.#
..###..##.
##.....##.
#.........
.#..#..#.#
.###....#.
#..#..#...
##..##....

Tile 3037:
..###...#.
#..#.....#
.####....#
#....###.#
..#....#.#
#.##...#..
......#..#
.##..##...
..#..#..#.
.##....###

Tile 1019:
.##..#...#
...#..#.##
###.##..#.
.##..#....
#.#...#...
....##...#
..##.#.#.#
#.....####
......####
..###....#

Tile 3089:
#..##..##.
..##......
.#....#...
..#..#....
.......#.#
...##.....
#.#...#...
#.......#.
#........#
.##...#..#

Tile 2011:
...#.###.#
#.#..#.#.#
#.#..###..
.......##.
...#.....#
.#.......#
##..#..#..
...#..#...
###....##.
...#.#...#

Tile 1801:
..####...#
#..#..#..#
#...#...#.
....#....#
..##.....#
....#.....
#..##.....
#.###.....
....##....
..#.#.#...

Tile 1217:
#.#.#.##..
##.#...#.#
.....#....
..#.....#.
#...##...#
..#.#..###
#..#..#..#
.#........
#......#.#
#...#.##.#

Tile 1789:
.#.#####..
..#.#....#
.##..#..#.
..#.###.##
..##......
.#.#..#...
#...#.#...
..........
#.##......
#.#..#..##

Tile 3719:
..####.##.
###.......
...#..#.#.
.......#..
#.###....#
........##
#.....#...
...##..#.#
#.#....##.
#.#..##.#.

Tile 3637:
#....#..#.
##..#..#..
#.....#..#
#.........
##........
#.###....#
#..##....#
..#.#...#.
......###.
..#.#..##.

Tile 1471:
.##.#..#..
.##....#.#
###...##.#
..##.##.##
..........
#......###
#.#.#.#..#
.....#.###
#.#..#...#
...#####..

Tile 1933:
##.###....
#..#....#.
#..#..##.#
.#..#..###
.....##...
.##..#...#
....#.#..#
#..#......
#.##.#.##.
....###.#.

Tile 1381:
.##..##.#.
.#..###..#
##.#.##.##
.#..#.....
#...##...#
.#.......#
#........#
####.....#
#.#...####
.#..#..###

Tile 2423:
#.#.######
#.........
##....##.#
#....#.#..
..#..#....
......#..#
##..#..#..
....###...
#....#....
..#.##....

Tile 3373:
.#.#..####
#.#.#....#
#..#.....#
....#....#
#..#..#.##
.....##...
#...##..##
..#.....#.
.#.#....##
##..##.#.#

Tile 1163:
###.....##
#...#....#
##.......#
.........#
...###.#.#
..#.......
...##.#..#
.#.#...##.
..#.##....
######.###

Tile 2543:
#...#.##.#
#.#......#
....#.#..#
##......##
##..#...##
..........
#.....##.#
###..#.###
.####.#..#
##...##...

Tile 1427:
#.#....##.
#.......##
...#.###.#
...#......
..#..#....
.#.....#..
..##.....#
#.#.#...#.
..#.#.#.##
.#...##.##

Tile 3371:
.##...#..#
#...#..#..
.#........
..#...####
..###.#..#
##.#....#.
.##.#.#.##
#..####...
....#..###
###.#...#.

Tile 3529:
.#.#..#..#
##..#..#..
..........
#..#..##..
###....#.#
.#....##.#
#.#......#
...#.#.#.#
#.........
.#.#..#.##

Tile 3539:
###.#..##.
##.#...###
#..#...###
#..#......
...##..#.#
#...#.#...
#.#.##....
#.#..#..##
#..#.##.##
##.#.#....

Tile 1511:
#..#####..
.##..#..#.
#.....#..#
#.#..##..#
..#......#
.#........
#.#.#.#..#
##.#.#..#.
##........
....#.....

Tile 2521:
.###....#.
#........#
.......#..
.#....#..#
##....#..#
......#...
...#.#..##
#......###
#...#....#
....###..#

Tile 1637:
.#..#.....
#.......#.
...#..#.##
#......#..
#.###.#..#
.#...##...
..###.#...
##...#.###
..#..##.#.
.##.#..#.#

Tile 2351:
####.###..
##...###..
#....#..#.
#........#
#.#.......
##..##...#
####..#...
##...##.#.
##...#.#..
..#####.#.

Tile 3929:
.#..##...#
.#.#..#...
##..##.#.#
..#...#...
.##.#...#.
#.....#..#
...#..#..#
##...#....
##......#.
.##..##...

Tile 1223:
....#.....
..#..#....
..#...#...
...#....##
..#......#
#.....#...
..#..##...
....#.....
#.....##.#
..##.#....

Tile 1009:
#....###.#
#.#......#
....##..#.
#.........
#..##....#
.##.......
.....#...#
.......##.
.....#.#.#
.#.....##.

Tile 1289:
.##..#.#.#
.......##.
.#...#...#
....#.....
........##
#...#..#..
#....#...#
#....###.#
#..#....#.
###..#....

Tile 3943:
.#.#.#....
#.....#.#.
#....#...#
....#.#.#.
....#..#..
##.#.#.#..
##...#.#..
#.........
.#....##.#
#.#.#####.

Tile 2633:
.####..##.
....#.....
....###...
......#..#
....#.....
#..#.#...#
#.##...#.#
##..#.##.#
..#.....##
#.#.####..

Tile 2797:
.###..#.#.
#...#.##.#
#.....#..#
....#...#.
...#....#.
.##.#.....
......##..
....#....#
#.........
..#...###.

Tile 1973:
....#.##.#
##.....#.#
..#..#.#.#
#.#.#..#..
.....##.##
.##.#.#...
..###.#...
........##
##...#...#
..#...#..#

Tile 2621:
#.##.##.##
.#..#.#.##
........#.
#...##....
.####..#.#
....#....#
.#........
...#....##
..##.#.#.#
###.##....

Tile 1303:
..########
.#.#......
#.#..#..#.
.#.#.....#
...##..#..
..##......
.#.#...#..
#.....##..
#........#
#.##.#.#..

Tile 1483:
.##.......
.#.#.##.#.
.##...#...
##...#..##
.#.#..#.##
#...#.##..
.##...#...
.......#.#
.#........
.#..#.##..

Tile 1229:
#.#.##..##
..#.##.##.
#####.###.
.#.#.....#
....##..#.
...#.##.#.
#.....#..#
#.##......
.........#
#.###....#

Tile 1319:
#..#..##.#
##..#....#
..#....##.
#.#...#..#
...#.....#
#.#..#.#..
##....#..#
###.....#.
..#.#..#.#
.#..##....

Tile 2837:
#.##.#.##.
.##.#.....
##..#.....
#...##..#.
.#.#...#.#
..#...#..#
..#..#...#
..##..#...
...##....#
.#.#..##.#

Tile 2503:
##...#####
##...#....
....#....#
..#####...
##.#.##.#.
#....#.#.#
#.#....#..
........##
.#..#.....
#..####.##

Tile 2711:
.##.#.##..
.#.....#.#
......#..#
##..#...##
..#....###
.##.#.###.
....#..#.#
......#...
#....#...#
#..####.#.

Tile 2137:
#.......##
#.#.......
#.#.#.....
#.....#..#
#...##.#.#
#..#...#.#
#..#.#....
..#.#.#...
#.##......
#.####.#.#

Tile 1543:
#.....#.##
..##.....#
#..#......
####....#.
#.#.#..#.#
..#..#....
....#..#..
###..##..#
..##.#.###
##.#....##

Tile 2161:
..#...##..
##...####.
#.##.#.##.
##........
#.....##.#
..#.#.##..
#...#.....
#.#..#..##
...##..###
.#..###.#.

Tile 2377:
...######.
#.....#..#
#...##....
#.....##..
.#......#.
.#.#..##..
......#..#
.......#..
..#.....#.
..###.#.#.

Tile 1429:
.#.##.#..#
.#....##..
.#...##..#
.#...#...#
...##.###.
.......###
##......##
#..#..##.#
#....##..#
#..###..##

Tile 2113:
#.######..
..#...##..
#.####.#.#
..........
..##......
....#.###.
#....#...#
#...##....
......##..
.######...

Tile 2677:
#..#.#####
......#..#
....##...#
....#.....
.##.##....
#......##.
...###.#.#
####.#..#.
..#...#...
##.#####..

Tile 2591:
.#.##..##.
##.#......
.#..#.#.##
.##..##..#
.........#
#..#.#.##.
........#.
...#..#...
.....#..#.
.#.####...

Tile 2287:
..##...##.
##.###....
#....#..##
#.#.....##
#.......#.
#...#....#
...#..#.##
.#..##...#
#....#.##.
.####..#..

Tile 1279:
#..##.#..#
##........
...##.....
##...#...#
#..#.....#
.......#.#
..#..#...#
...#.#.##.
#..#....#.
#.#...##..

Tile 3769:
##.....##.
....#....#
...#.#....
....#....#
#....#...#
#..#..##.#
#......#.#
..........
.....#...#
##.#.##..#

Tile 1931:
.##.#.##.#
..###..#.#
#.##..#...
..#..#.#..
..#...####
#.....#.#.
..........
..####..##
..#....###
....#.##.#

Tile 3847:
.#.####...
.......#.#
##...#...#
#...##...#
....#....#
..#..#....
#.#.#..#..
..#..#....
##...#....
##..##.#..

Tile 2549:
..##....#.
#.........
#....#....
#.....#...
#.##...#..
##...#.#.#
.####..#..
......####
...####.##
..#####..#

Tile 3067:
..####..##
#....#....
##.....#.#
....#...##
........#.
...#...###
.......#.#
#..##..##.
..##...#.#
...#...##.

Tile 2083:
.####..#..
##.#..#..#
.......#..
##..##.#.#
.......##.
##....###.
#....#...#
#...##...#
...#......
.####.#..#

Tile 2819:
...##..###
#.##.....#
##.##.#..#
.....#..##
#......#.#
#........#
##....####
#.....#.#.
#....#...#
....#...#.

Tile 2089:
#####.#.#.
###..#..#.
#.....#...
.####..#..
..####..#.
#....#..#.
....#.#...
....#.#.##
#.#.......
..####.#..

Tile 1459:
..##..#..#
.##..#..#.
...#......
.....##.#.
.#.#.#....
.....#...#
.....##...
.#.#..####
#...##...#
.#.#.#.#..

Tile 3761:
..#.#...#.
...#.#####
.#...#..##
#..#.#....
..........
..#..#..##
#.####..#.
....####..
##.#..#...
#.##.#####

Tile 2707:
######.###
##..#.##.#
.#.......#
...#...#..
#.....#...
...#......
........#.
#...#.....
.###..#..#
.....#.##.

Tile 2371:
.###..####
###......#
......#...
...##..#.#
...#.....#
##......#.
...#..##.#
#.....##..
##..##.#..
##...#.#..

Tile 1907:
.#.#.####.
#..#.....#
#..##.....
##..#.###.
#...#.#.#.
..#.#.....
#.##......
###......#
#........#
#.#.#....#

Tile 1499:
####...#..
...#......
.....#....
##..#....#
#...##...#
#.#....#..
.....#.###
#......#.#
###...#.##
##..##...#

Tile 2267:
.#..##...#
#...#.#..#
##.....#.#
..........
###.##....
.####..#.#
#........#
......#.#.
#.#..#.#.#
..#.#...##

Tile 1283:
######..##
##.#.....#
#.......##
#...##...#
##........
#.....#..#
#....#...#
#..###.#..
#.........
...##.....

Tile 3499:
##..#..##.
#........#
#....#....
#.####....
#.#......#
....##...#
#..#....#.
#...#....#
#.#....##.
.#.#.#.#..

Tile 3881:
#..#....##
#..#.....#
..#...#..#
#...##...#
#.......##
..#..#####
....#...#.
##..##....
#.#..#....
..##.###.#

Tile 2341:
...##.#.##
...#.##.##
.##..###.#
#..#######
##..#..#.#
......##.#
....#.##.#
####.#..##
##....###.
.##.#..#.#

Tile 2399:
......####
#...#.....
..#...#.##
.#.#....##
##........
##.....##.
.....#...#
#....#.##.
#...#..#..
..#.#.###.

Tile 3697:
..#..##..#
#.###..#.#
.#.#.#...#
#.#.#....#
#.###.#..#
......##.#
##.#....##
.#......#.
####.#...#
#.#..#.###

Tile 3331:
#.#.##....
##.....###
####......
.#.##.#..#
.##.......
#.#..#...#
.....#.#..
#.##.#.##.
###......#
.#.#...##.

Tile 1979:
...###..##
..#..#..##
...##....#
###...#.#.
#.....#..#
..##..#...
.....#.#..
#..#......
##........
#####.....

Tile 3041:
#...##.#.#
#..###.#.#
...#...###
#...#..#.#
.#..##...#
#.....###.
......#...
.#.#.#...#
..#.##..##
...#..#.##

Tile 1307:
.#.#.#...#
.##...##.#
...#.....#
#.....#...
#........#
##.###.#.#
##....#..#
#........#
.###....##
##..#.###.

Tile 1523:
..#.....##
.....##...
#........#
#.#.#...#.
#..#..#.##
#.......##
..#..#.#.#
....#....#
###......#
...#.#..#.

Tile 3491:
####..#...
.#....#.##
.#..#..#.#
#...#..###
#.......#.
#.....#..#
.....#.#..
#.#..##...
.#...#...#
##.#..#.#.

Tile 3989:
####....##
##..###..#
#..#....##
...#####.#
###..#..##
#.####..#.
##..#....#
..#......#
...##...##
.##.#..###

Tile 3727:
#.#..#.#..
#.#......#
......#..#
..#....###
#..##.#...
...#..#...
#..##.####
#..#.....#
.......#..
...###..##

Tile 1583:
..##....##
#....##...
##..#...#.
....##.#..
#...###..#
.##.#.....
....#..#..
...#.#....
....##..##
#..##...#.

Tile 3581:
##..#.....
....#..##.
##..#....#
..#.......
#.....#...
#.....#...
#...#....#
.........#
.....##..#
##..#.####

Tile 3559:
.#........
....##....
....#..#.#
##..#.##..
#..#.#....
..##.#...#
.#..##..##
....#..#..
##.#.....#
#....#####

Tile 2131:
..########
#.........
..#.##..#.
.#.#.#....
####....##
#####.....
#.........
#.#.....#.
..##....##
...###.##.

Tile 1061:
###...##..
.#...##...
.#.#..#...
..##......
#......##.
#.....#...
#.......##
#........#
#.##.##...
##.#.##.#.

Tile 3947:
.#####.##.
..#.#.#...
#.......##
#.#....#.#
..#....##.
.##.#...##
#....#.##.
....####..
###....#.#
########.#

Tile 2213:
.###......
....#...##
#..##.....
#..##.#...
...#....#.
.........#
#####....#
#......#.#
###.......
..##.##.#.

Tile 3319:
..##.###..
.#...##...
..#.#..#..
..#.##....
...###....
##.#......
#.#...####
.....#.#.#
.#........
#.....#.##

Tile 1423:
#....#..#.
..#...#..#
.#.#.#.##.
#.##..##..
#.##......
#.#...##.#
..#......#
#.##...###
###.#.#.##
.###.....#

Tile 1607:
#.#...#..#
.##....#..
.#...#.#.#
##.#.....#
...###..##
#...#..#..
..........
#..#.....#
#..#......
.#.##..#.#

Tile 3301:
...#.#...#
.#.#....##
.#.####...
#..##.#...
##..###..#
#...#.#.##
......#..#
#........#
#..####.##
####..#.##

Tile 2917:
.##..####.
#......#.#
##.......#
.##..#....
......#..#
.##..##...
#.####.#.#
##......##
#......##.
.....#.##.

Tile 3851:
#.##.#.#.#
###..#...#
#.##.....#
..##..#...
#.##.....#
.##...#.#.
#..#.##...
#...#.....
...#.#...#
...#..####

Tile 1439:
..##.##.##
.....#...#
#..###...#
....##....
##.#..#...
.....#...#
##.#.#....
...#.#...#
..#..###..
..#...###.

Tile 1493:
.#.###....
.#.#.#....
#.#....#.#
#...#..#..
#....#..#.
..#...#...
...#......
..........
...#.##..#
##....#.#.

Tile 1889:
..###.###.
..##.#....
#....#...#
..#...#..#
#.......#.
#...#..#.#
..#..##...
..#......#
#....####.
##.#.##...

Tile 3407:
#..#.....#
........#.
..#.......
...#......
...#.##.##
#..##.....
##.##..##.
#...#.....
#....##...
##.##..##.

Tile 2699:
....##..#.
#.........
#.#...###.
...#..#..#
.##..#...#
##..#..##.
####....##
#.#...#..#
........##
.####.....

Tile 2861:
.....##...
.....#..##
...###....
..##..#..#
..#.#.....
#.#.......
.....#....
.##..#.#..
##.#..##..
#.####...#

Tile 1619:
##....#.##
#.#...#..#
#.#....#..
.......###
#.#.......
......##.#
.#....#.#.
#....###..
#....##.##
#.#####...

Tile 1531:
...#.##...
#..#.#....
#..#...##.
.....#....
#........#
#.#.......
##.##....#
......#..#
#.#.......
..#####...

Tile 3169:
##.####..#
..........
#...#..#.#
#........#
.#...#....
#...##....
.........#
#....#..#.
......###.
..#.####..

Tile 1249:
###.#..#.#
#..#.###.#
#.#.#.....
#...#.....
###.#.#...
.....#.##.
#.......##
#....#.#..
....#..##.
..#..##.##

Tile 2293:
..#...#..#
#....#...#
#....#..#.
..........
.......#.#
####......
.##....#.#
####.....#
#..#.....#
#.#.##....

Tile 1723:
.#.#..#..#
#...#..#.#
#.....#...
.##..#..#.
.........#
#.#..####.
###..###..
###..##.##
#.......#.
#..#.#.#.#

Tile 3191:
.#..#####.
........#.
.#..#...##
#..#...#.#
.##.##....
.......#.#
...#...#.#
..#.......
##.......#
...####..#

Tile 1663:
.####.##..
....#...##
##..##...#
#..#......
....##....
##.#..##..
##..##..#.
...#.#.#.#
#......#..
.##..###.#

Tile 2281:
####.#..#.
#......###
.#....###.
..........
..#.....##
.........#
..#.#.#.##
#...#.....
###.#..#..
##...#..#.

Tile 3677:
..####.##.
###......#
.##....#..
#....#...#
....#.#.#.
#.##.#..#.
...##.#...
....#.#..#
..#.......
##..##..#.

Tile 1361:
.#..###.##
.........#
#....##...
..##...#..
#.#.....##
#.#####...
##.#...#..
#..#...###
#..#.#...#
#####.#.#.

Tile 1051:
######.##.
####..#..#
###.##....
#.#......#
#####..###
#.#.#..#.#
...#.#...#
##.#.....#
..#...####
....#..###

Tile 1831:
##.#..####
####...##.
##...##..#
#...#...#.
....#.....
#...#....#
#.....#...
#####.....
......#...
.###.###.#

Tile 1861:
....###..#
.####...#.
#..#...###
#..#.#....
#.##.#....
....#.##..
.#..#...##
.....#....
#...#.##.#
##.##.#...

Tile 1873:
.#.###..#.
##.......#
.####...##
##......#.
#.........
.#........
.##.#....#
...###.##.
..#..##..#
.#.###...#

Tile 2129:
#####..###
##..##..#.
.#.#......
##....#..#
#.####....
....#....#
###..##.##
.##.#..#..
#.#..##.##
...#.##.#.

Tile 2333:
..#.#...#.
#.........
#...#....#
....######
..##...###
##....###.
...#......
##.####..#
#####.....
.#....#.#.

Tile 2851:
.###..##..
...#..##..
#......##.
......#.##
..........
.###....#.
#....#.#..
#.....#.##
..........
.#######..

Tile 2689:
.#######.#
.....#....
........##
###..#.##.
#.........
#......###
.#.###.#..
....###...
#..#..#...
..#...#.#.

Tile 1193:
.##...#...
####......
...#.###.#
..#..#..#.
#.#...##.#
.....##.#.
#...##.##.
#....#..##
...##...##
#..##.#..#

Tile 2663:
......#.##
##......##
.#.....##.
.##.##...#
#.##..##.#
...##..#.#
#.........
#.#..#...#
.......#..
.#...#####

Tile 1481:
.#.#...#.#
#..#......
.#.......#
#.##..#.#.
..#..#....
##........
.#...#####
#....#.#.#
#....##..#
.###.####.

Tile 2417:
###..####.
....#..#.#
...#....##
#........#
#.##...#.#
#.#.......
.......#.#
#......###
#..#.##.##
#.##.....#

Tile 3671:
..#####.##
....#.....
.....#.#..
....#...#.
..........
#.#..##.#.
..##.#...#
#..#.....#
.#......#.
...#.###.#

Tile 1181:
###..#.#.#
........#.
#........#
#..#..#.##
#.#..##...
..#....#.#
..........
.####.#.##
...#.#....
...#....##

Tile 1999:
#..#..##..
...#......
##.#.#.#.#
#.....#..#
...#....#.
##..##..##
####.#...#
....#....#
.....#...#
#.#.####.#

Tile 2207:
...##.##..
......#.#.
###.#.#..#
.....##...
..##.#.#..
#.....##.#
.#.#......
#...#..#..
..#.#####.
..###..#..

Tile 3359:
#.#..#...#
#.........
####..#.#.
#........#
....#.#...
.#..###...
.#....#..#
....####.#
#.....###.
#...##.#.#

Tile 1847:
##..#.#.##
#........#
#.#####...
..##.##...
##..#...##
##...#..##
.#...#....
#.#......#
##..##...#
..#.#####.`;

// input = `Tile 2311:
// ..##.#..#.
// ##..#.....
// #...##..#.
// ####.#...#
// ##.##.###.
// ##...#.###
// .#.#.#..##
// ..#....#..
// ###...#.#.
// ..###..###

// Tile 1951:
// #.##...##.
// #.####...#
// .....#..##
// #...######
// .##.#....#
// .###.#####
// ###.##.##.
// .###....#.
// ..#.#..#.#
// #...##.#..

// Tile 1171:
// ####...##.
// #..##.#..#
// ##.#..#.#.
// .###.####.
// ..###.####
// .##....##.
// .#...####.
// #.##.####.
// ####..#...
// .....##...

// Tile 1427:
// ###.##.#..
// .#..#.##..
// .#.##.#..#
// #.#.#.##.#
// ....#...##
// ...##..##.
// ...#.#####
// .#.####.#.
// ..#..###.#
// ..##.#..#.

// Tile 1489:
// ##.#.#....
// ..##...#..
// .##..##...
// ..#...#...
// #####...#.
// #..#.#.#.#
// ...#.#.#..
// ##.#...##.
// ..##.##.##
// ###.##.#..

// Tile 2473:
// #....####.
// #..#.##...
// #.##..#...
// ######.#.#
// .#...#.#.#
// .#########
// .###.#..#.
// ########.#
// ##...##.#.
// ..###.#.#.

// Tile 2971:
// ..#.#....#
// #...###...
// #.#.###...
// ##.##..#..
// .#####..##
// .#..####.#
// #..#.#..#.
// ..####.###
// ..#.#.###.
// ...#.#.#.#

// Tile 2729:
// ...#.#.#.#
// ####.#....
// ..#.#.....
// ....#..#.#
// .##..##.#.
// .#.####...
// ####.#.#..
// ##.####...
// ##..#.##..
// #.##...##.

// Tile 3079:
// #.#.#####.
// .#..######
// ..#.......
// ######....
// ####.#..#.
// .#...#.##.
// #.#####.##
// ..#.###...
// ..#.......
// ..#.###...`;

input = input.split("\n");

let tiles = [];
let tile = [];
for (let line of input) {
  if (line === "") {
    tiles.push(tile);
    tile = [];
  } else {
    tile.push(line);
  }
}
tiles.push(tile);

tiles = tiles.map((tile) => {
  let id = tile[0].split(" ")[1];
  id = id.slice(0, id.length - 1);
  let content = tile.slice(1);
  let tb = content[0];
  let bb = content[content.length - 1];
  let lb = "";
  let rb = "";
  for (let row of content) {
    lb += row[0];
    rb += row[row.length - 1];
  }
  return {
    id,
    content,
    tb,
    bb,
    lb,
    rb,
  };
});

let bordermap = new Map();
for (let tile of tiles) {
  let tbr = tile.tb.split("").reverse().join("");
  let bbr = tile.bb.split("").reverse().join("");
  let lbr = tile.lb.split("").reverse().join("");
  let rbr = tile.rb.split("").reverse().join("");

  if (bordermap.has(tile.tb)) {
    bordermap.set(tile.tb, bordermap.get(tile.tb).concat([tile]));
  } else if (bordermap.has(tbr)) {
    bordermap.set(tbr, bordermap.get(tbr).concat([tile]));
  } else {
    bordermap.set(tile.tb, [tile]);
  }

  if (bordermap.has(tile.bb)) {
    bordermap.set(tile.bb, bordermap.get(tile.bb).concat([tile]));
  } else if (bordermap.has(bbr)) {
    bordermap.set(bbr, bordermap.get(bbr).concat([tile]));
  } else {
    bordermap.set(tile.bb, [tile]);
  }

  if (bordermap.has(tile.lb)) {
    bordermap.set(tile.lb, bordermap.get(tile.lb).concat([tile]));
  } else if (bordermap.has(lbr)) {
    bordermap.set(lbr, bordermap.get(lbr).concat([tile]));
  } else {
    bordermap.set(tile.lb, [tile]);
  }

  if (bordermap.has(tile.rb)) {
    bordermap.set(tile.rb, bordermap.get(tile.rb).concat([tile]));
  } else if (bordermap.has(rbr)) {
    bordermap.set(rbr, bordermap.get(rbr).concat([tile]));
  } else {
    bordermap.set(tile.rb, [tile]);
  }
}

let corners = [];

for (let tile of tiles) {
  let sharedSides = 0;

  let tbr = tile.tb.split("").reverse().join("");
  let bbr = tile.bb.split("").reverse().join("");
  let lbr = tile.lb.split("").reverse().join("");
  let rbr = tile.rb.split("").reverse().join("");

  if (bordermap.has(tile.tb) && bordermap.get(tile.tb).length > 1) {
    sharedSides++;
  }
  if (bordermap.has(tbr) && bordermap.get(tbr).length > 1) {
    sharedSides++;
  }
  if (bordermap.has(tile.bb) && bordermap.get(tile.bb).length > 1) {
    sharedSides++;
  }
  if (bordermap.has(bbr) && bordermap.get(bbr).length > 1) {
    sharedSides++;
  }
  if (bordermap.has(tile.lb) && bordermap.get(tile.lb).length > 1) {
    sharedSides++;
  }
  if (bordermap.has(lbr) && bordermap.get(lbr).length > 1) {
    sharedSides++;
  }
  if (bordermap.has(tile.rb) && bordermap.get(tile.rb).length > 1) {
    sharedSides++;
  }
  if (bordermap.has(rbr) && bordermap.get(rbr).length > 1) {
    sharedSides++;
  }
  if (sharedSides === 2) {
    corners.push(tile);
  }
}

let idProduct = 1;
for (let corner of corners) {
  idProduct *= corner.id;
}

console.log(`Answer: ${idProduct}`);

// ************************************************************************************

function rotateTile(tile) {
  let newTile = [];
  for (let i = 0; i < tile[0].length; i++) {
    let newRow = "";
    for (let j = tile.length - 1; j >= 0; j--) {
      newRow += tile[j][i];
    }
    newTile.push(newRow);
  }
  return newTile;
}

function flipTileHorizontal(tile) {
  let tileCopy = [...tile];
  for (let i = 0; i < tileCopy.length; i++) {
    tileCopy[i] = tileCopy[i].split("").reverse().join("");
  }
  return tileCopy;
}

function flipTileVertical(tile) {
  let tileCopy = [...tile];
  tileCopy.reverse();
  return tileCopy;
}

function reassignTileBorders(tile) {
  let tb = tile.content[0];
  let bb = tile.content[tile.content.length - 1];
  let lb = "";
  let rb = "";
  for (let row of tile.content) {
    lb += row[0];
    rb += row[row.length - 1];
  }
  tile.tb = tb;
  tile.bb = bb;
  tile.lb = lb;
  tile.rb = rb;
}

// create empty image
let arrangedTiles = [];
for (let i = 0; i < Math.sqrt(tiles.length); i++) {
  let row = [];
  for (let j = 0; j < Math.sqrt(tiles.length); j++) {
    row.push(0);
  }
  arrangedTiles.push(row);
}

let startingCorner = corners[0];

while (
  (bordermap.get(startingCorner.tb) &&
    bordermap.get(startingCorner.tb).length > 1) ||
  (bordermap.get(startingCorner.lb) &&
    bordermap.get(startingCorner.lb).length > 1) ||
  (bordermap.get(startingCorner.tb.split("").reverse("").join("")) &&
    bordermap.get(startingCorner.tb.split("").reverse("").join("")).length >
      1) ||
  (bordermap.get(startingCorner.lb.split("").reverse("").join("")) &&
    bordermap.get(startingCorner.lb.split("").reverse("").join("")).length > 1)
) {
  console.log("rotating top left corner");
  startingCorner.content = rotateTile(startingCorner.content);
  reassignTileBorders(startingCorner);
}

arrangedTiles[0][0] = startingCorner;

for (let i = 0; i < arrangedTiles.length; i++) {
  for (let j = 0; j < arrangedTiles[0].length; j++) {
    if (i === 0 && j === 0) {
      continue;
    }
    // current tile is arrangedTiles[i][j];
    if (j === 0) {
      // attach tile by matching top border
      let tileAbove = arrangedTiles[i - 1][j];
      let targetBorder = tileAbove.bb;
      let tilesWithTargetBorder;
      if (bordermap.has(targetBorder)) {
        tilesWithTargetBorder = bordermap.get(targetBorder);
      } else {
        tilesWithTargetBorder = bordermap.get(
          targetBorder.split("").reverse("").join("")
        );
      }
      let tileToAttach;
      for (let tile of tilesWithTargetBorder) {
        if (tile !== tileAbove) {
          tileToAttach = tile;
        }
      }
      for (let i = 0; i < 4; i++) {
        if (tileToAttach.tb !== tileAbove.bb) {
          tileToAttach.content = rotateTile(tileToAttach.content);
          reassignTileBorders(tileToAttach);
        }
      }
      if (tileToAttach.tb !== tileAbove.bb) {
        tileToAttach.content = flipTileHorizontal(tileToAttach.content);
        reassignTileBorders(tileToAttach);
      }
      for (let i = 0; i < 4; i++) {
        if (tileToAttach.tb !== tileAbove.bb) {
          tileToAttach.content = rotateTile(tileToAttach.content);
          reassignTileBorders(tileToAttach);
        }
      }
      if (tileToAttach.tb !== tileAbove.bb) {
        tileToAttach.content = flipTileHorizontal(tileToAttach.content);
        tileToAttach.content = flipTileVertical(tileToAttach.content);
        reassignTileBorders(tileToAttach);
      }
      for (let i = 0; i < 4; i++) {
        if (tileToAttach.tb !== tileAbove.bb) {
          tileToAttach.content = rotateTile(tileToAttach.content);
          reassignTileBorders(tileToAttach);
        }
      }
      if (tileToAttach.tb !== tileAbove.bb) {
        console.log("ORIENTATION ALROGITHM DOES NOT WORK!!!");
      }
      arrangedTiles[i][j] = tileToAttach;
    } else {
      // attach tile by matching left border
      let tileToLeft = arrangedTiles[i][j - 1];
      let targetBorder = tileToLeft.rb;
      let tilesWithTargetBorder;
      if (bordermap.has(targetBorder)) {
        tilesWithTargetBorder = bordermap.get(targetBorder);
      } else {
        tilesWithTargetBorder = bordermap.get(
          targetBorder.split("").reverse("").join("")
        );
      }
      let tileToAttach;
      for (let tile of tilesWithTargetBorder) {
        if (tile !== tileToLeft) {
          tileToAttach = tile;
        }
      }
      for (let i = 0; i < 4; i++) {
        if (tileToAttach.lb !== tileToLeft.rb) {
          tileToAttach.content = rotateTile(tileToAttach.content);
          reassignTileBorders(tileToAttach);
        }
      }
      if (tileToAttach.lb !== tileToLeft.rb) {
        tileToAttach.content = flipTileHorizontal(tileToAttach.content);
        reassignTileBorders(tileToAttach);
      }
      for (let i = 0; i < 4; i++) {
        if (tileToAttach.lb !== tileToLeft.rb) {
          tileToAttach.content = rotateTile(tileToAttach.content);
          reassignTileBorders(tileToAttach);
        }
      }
      if (tileToAttach.lb !== tileToLeft.rb) {
        tileToAttach.content = flipTileHorizontal(tileToAttach.content);
        tileToAttach.content = flipTileVertical(tileToAttach.content);
        reassignTileBorders(tileToAttach);
      }
      for (let i = 0; i < 4; i++) {
        if (tileToAttach.lb !== tileToLeft.rb) {
          tileToAttach.content = rotateTile(tileToAttach.content);
          reassignTileBorders(tileToAttach);
        }
      }
      if (tileToAttach.lb !== tileToLeft.rb) {
        console.log("ORIENTATION ALROGITHM DOES NOT WORK!!!");
      }
      arrangedTiles[i][j] = tileToAttach;
    }
  }
}

let image = [];

let arrangedTilesLength = arrangedTiles.length;
let arrangedTilesRowLength = arrangedTiles[0].length;
let tileContentLength = arrangedTiles[0][0].content.length;
for (let row = 0; row < arrangedTiles.length; row++) {
  for (let tileRow = 1; tileRow < tileContentLength - 1; tileRow++) {
    let imageRow = "";
    for (let tile = 0; tile < arrangedTiles[0].length; tile++) {
      imageRow += arrangedTiles[row][tile].content[tileRow].slice(
        1,
        arrangedTiles[row][tile].content[tileRow].length - 1
      );
    }
    image.push(imageRow);
  }
}

// console.log(image);

// refactor
function findSeaMonsters(image) {
  let monsterFound = false;
  for (let i = 0; i < image.length - 3; i++) {
    for (let j = 0; j < image[0].length - 20; j++) {
      if (
        (image[i][j + 18] === "#" || image[i][j + 18] === "0") &&
        (image[i + 1][j] === "#" || image[i + 1][j] === "0") &&
        (image[i + 1][j + 5] === "#" || image[i + 1][j + 5] === "0") &&
        (image[i + 1][j + 6] === "#" || image[i + 1][j + 6] === "0") &&
        (image[i + 1][j + 11] === "#" || image[i + 1][j + 11] === "0") &&
        (image[i + 1][j + 12] === "#" || image[i + 1][j + 12] === "0") &&
        (image[i + 1][j + 17] === "#" || image[i + 1][j + 17] === "0") &&
        (image[i + 1][j + 18] === "#" || image[i + 1][j + 18] === "0") &&
        (image[i + 1][j + 19] === "#" || image[i + 1][j + 19] === "0") &&
        (image[i + 2][j + 1] === "#" || image[i + 2][j + 1] === "0") &&
        (image[i + 2][j + 4] === "#" || image[i + 2][j + 4] === "0") &&
        (image[i + 2][j + 7] === "#" || image[i + 2][j + 7] === "0") &&
        (image[i + 2][j + 10] === "#" || image[i + 2][j + 10] === "0") &&
        (image[i + 2][j + 13] === "#" || image[i + 2][j + 13] === "0") &&
        (image[i + 2][j + 16] === "#" || image[i + 2][j + 16] === "0")
      ) {
        image[i][j + 18] = "0";
        image[i + 1][j] = "0";
        image[i + 1][j + 5] = "0";
        image[i + 1][j + 6] = "0";
        image[i + 1][j + 11] = "0";
        image[i + 1][j + 12] = "0";
        image[i + 1][j + 17] = "0";
        image[i + 1][j + 18] = "0";
        image[i + 1][j + 19] = "0";
        image[i + 2][j + 1] = "0";
        image[i + 2][j + 4] = "0";
        image[i + 2][j + 7] = "0";
        image[i + 2][j + 10] = "0";
        image[i + 2][j + 13] = "0";
        image[i + 2][j + 16] = "0";
        monsterFound = true;
      }
    }
  }
  return monsterFound;
}

let seaMonstersFound = false;
for (let i = 0; i < 4; i++) {
  image = image.map((row) => row.split(""));
  if (findSeaMonsters(image)) {
    seaMonstersFound = true;
    break;
  } else {
    image = image.map((row) => row.join(""));
    image = rotateTile(image);
  }
}

if (!seaMonstersFound) {
  image = flipTileHorizontal(image);
  for (let i = 0; i < 4; i++) {
    image = image.map((row) => row.split(""));
    if (findSeaMonsters(image)) {
      seaMonstersFound = true;
      break;
    } else {
      image = image.map((row) => row.join(""));
      image = rotateTile(image);
    }
  }
}

if (!seaMonstersFound) {
  image = flipTileHorizontal(image);
  image = flipTileVertical(image);
  for (let i = 0; i < 4; i++) {
    image = image.map((row) => row.split(""));
    if (findSeaMonsters(image)) {
      seaMonstersFound = true;
      break;
    } else {
      image = image.map((row) => row.join(""));
      image = rotateTile(image);
    }
  }
}

image = image.map((row) => row.join(""));
console.log(image);

let hashes = 0;
for (let row of image) {
  for (let char of row) {
    if (char === "#") {
      hashes++;
    }
  }
}

console.log(`Answer: ${hashes}`);
